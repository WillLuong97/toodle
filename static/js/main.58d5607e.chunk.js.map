{"version":3,"sources":["serviceWorker.js","Welcome.js","footer.js","Promotion.js","Faq.js","Disclaimer.js","Navigation.js","registrationConfirmation.js","SideBarData.js","SideMenuStudent.js","Card.js","StudentCardView.js","studentLandingPage.js","TutorLandingPage.js","AnswerPage.js","QuestionThreadsView.js","Login.js","Registraion.js","userPage.jsx","index.js","img/favicon.ico","img/Best-Programming-Languages-to-Start-Learning-Today.jpg","img/Competitive-Programming-1.jpg","img/download.jpeg","img/placeholder.png"],"names":["Boolean","window","location","hostname","match","Welcome","className","React","Component","Footer","src","logo","alt","href","name","Promotion","img1","img2","img3","Faq","props","useState","setActive","setActiveState","setHeight","setHeighState","content","useRef","onClick","current","scrollHeight","title","ref","style","maxHeight","dangerouslySetInnerHTML","__html","Disclaimer","Navigation","navbar","setNavBar","addEventListener","scrollY","to","RegConfirmation","type","SideBarData","path","icon","cName","SideMenuStudent","sideBar","setSideBar","showSideBar","Provider","value","color","map","item","index","key","useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","fontSize","description","fontsize","pos","marginBottom","SimpleCard","classes","topic","status","course","console","log","Card","CardHeader","action","IconButton","aria-label","subheader","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","size","localStorage","setItem","professor","studentName","timestamp","openThreadView","studentID","getItem","StudentCardView","state","questions","axios","get","then","res","data","setState","this","Grid","container","spacing","paddingLeft","paddingRight","question","xs","sm","getQuestionObjects","username","StudentLandingPage","onSubmit","e","preventDefault","Date","timestamp_Formated","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","request","student_ID","document","getElementById","post","response","alert","catch","err","sendQuestion","id","placeholder","onChange","handleChange","TutorLandingPage","renderTableData","timeStamp","AnswerPage","answer","sendAnswer","student_name","QuestionThreadsView","Login","containerRef","password","result","error","goodRes","errorMessage","decode","jwt_decode","student","tutor","login","htmlFor","Register","prop","email","server_response","registrattion","UserFields","isLoginActive","RightSide","classList","remove","add","prevState","currentActive","changeState","bind","App","exact","Main","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.58d5607e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './Welcome.css';\n//import background image\n// import Background from './img/img02.jpg';\n// const backgroundStyle = {backgroundImage: `url(${Background})`, height:\"100vh\", backgroundsize: 'cover'}\n\n\nclass Welcome extends React.Component{\n    render(){\n        return (\n            <div className=\"container\">\n                <h1>Tutoring re-imagined.</h1>\n                <h1>Ask anywhere, answer anytime.</h1>  \n            </div>\n                \n                         \n            \n        );\n    };\n};\n\n\n//displaying the component in the \nexport default Welcome;","import React from 'react';\nimport './footer.css';\n// import {Link} from \"react-router-dom\";\n//import logo \nimport logo from './img/favicon.ico'\n\n\nclass Footer extends React.Component{\n    render(){\n        return (\n            <div className=\"Footer\">\n                <div className=\"Toodle-Link\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <a href=\"#button\">Toodle</a>\n                </div>\n                <div className=\"about-link\">\n                    <a href=\"#button\">About us</a>\n                </div>\n\n                <div className=\"privacy-link\">\n                    <a href=\"#button\">Privacy</a>\n                </div>\n\n                <div className=\"term-link\">\n                    <a href=\"#button\">Terms</a>\n                </div>\n\n                <div className=\"support-link\">\n                    <a href=\"#button\">Support</a>\n                </div>\n                   \n                <div className=\"Icon\">\n                    <div>\n                        <span>\n                            <a href=\"#button\"><ion-icon name=\"logo-facebook\"></ion-icon></a>\n                            <a href=\"#button\"><ion-icon name=\"logo-twitter\"></ion-icon></a>\n                            \n                        </span>\n                    </div>\n                \n\n                </div>    \n            </div>\n\n        );\n    };\n};\n\nexport default Footer;","import React from 'react';\nimport './Promotion.css';\nimport img1 from './img/Best-Programming-Languages-to-Start-Learning-Today.jpg';\nimport img2 from './img/Competitive-Programming-1.jpg'\nimport img3 from './img/download.jpeg'\nclass Promotion extends React.Component{\n    render(){\n        return(\n            <div className=\"Contents\">\n\n                <div className=\"Header\">\n                    <h1>Get your question answered with Toodle</h1>\n                    <p>You can get free tutor helps on your homework. Tutor are available to answer your question the moment you sent to us</p>\n                </div>\n                \n                <div className=\"Courses\">\n                    <div className=\"prog-lang\">\n                        <img src={img1} className=\"img1\" alt=\"logo\" />\n                        <h2>Programming Langues: Python, Java</h2>\n                    </div>\n\n                    <div className=\"prog-lang\">\n                        <img src={img2} className=\"img1\" alt=\"logo\" />\n                        <h2>Algorithm & Data Structure</h2>\n                    </div>\n\n                    <div className=\"prog-lang\">\n                        <img src={img3} className=\"img1\" alt=\"logo\" />\n                        <h2>Sciences</h2>\n                    </div>\n\n\n                    {/* <div className=\"algo-data\">\n                        <img src={img2} className=\"img1\" alt=\"logo\" />\n                        <h2>Algorithm & Data Structure</h2>\n                        \n                    </div>\n\n                    <div className=\"science\">\n                        <img src={img3} className=\"img1\" alt=\"logo\" />\n\n                        <h2>Sciences</h2>\n                    </div> */}\n                        \n                </div>\n\n            </div>\n\n        );\n    };\n};\n\n//Export the components: \nexport default Promotion;","import React, {useState, useRef } from \"react\";\n\nimport \"./Faq.css\";\n\n\nfunction Faq(props){\n\n    const [setActive, setActiveState] = useState(\"\");\n    const [setHeight, setHeighState] = useState(\"0px\");\n\n    const  content = useRef(null);\n\n    function toggleAccordion(){\n        setActiveState(setActive === \"\" ? \"active\": \"\");\n        setHeighState(setActive === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`)\n\n    }\n\n\n\n    return(\n        <div className=\"accordion__section\">\n            <button className={`accordion ${setActive}`} onClick={toggleAccordion}>\n                <p className='accordion__title'>{props.title}</p>\n            </button>\n\n            <div ref={content} style= {{maxHeight: `${setHeight}`}}className=\"accordion__content\">\n                <div className=\"accordion__text\" dangerouslySetInnerHTML={{ __html: props.content }}>\n\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Faq;","import React from 'react';\nimport './Disclaimer.css';\nimport img1 from './img/placeholder.png'\n\nclass Disclaimer extends React.Component{\n    render(){\n        return(\n            <div className=\"Disclaimer\">\n                <div className=\"d01\">Ask Instantly, everywhere</div>\n                <div className=\"d02\">No appointment, no meetup, just ask and get answered</div>\n                <div className=\"d03\">\n                    Get answered to your homework question right in the comfort of your home or dorm room without the hastle of scheduling an appointment\n                </div>\n                <div className=\"picture\">\n                    <img src={img1} className=\"img1\" alt=\"logo\"/>\n\n                </div>\n            </div>\n\n            \n        )\n    }\n}\n\nexport default Disclaimer;","import React, {useState, useEffect } from 'react';\nimport logo from './img/favicon.ico'\nimport './Navigation.css';\nimport {Link} from \"react-router-dom\";\n\nfunction Navigation(){\n    //set the state to be changed later.\n    const [navbar, setNavBar] = useState(false);\n\n    //create a funtion that showcase the scroll\n    const changeBackground = () => {\n        // console.log(window.scrollY); //check if the vertical scroll works on our page\n        if(window.scrollY >= 120) {\n            setNavBar(true)\n            \n        } else {\n            setNavBar(false);\n        }\n    }\n\n    window.addEventListener('scroll', changeBackground);\n    \n    return(\n        <nav className={navbar ? 'navbarActive' : 'navBar'}>\n            <ul className=\"logo\">\n                <li><a href=\"#button\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></a></li>\n            </ul>\n            <ul className=\"links\">\n                <li><a href=\"#About\">About</a></li>\n                <li><a href=\"#contact\">Contact Us</a></li>\n                <li><a href=\"#becomeTutor\">Become a Tutor</a></li>\n            </ul>\n\n            <ul className=\"button\">\n                <Link to=\"/userPage\">\n                    <li>Try Toodle</li>\n                </Link>\n                \n                {/* <li><a href=\"/userPage\">Try Toodle for Free</a></li> */}\n            </ul>\n        </nav>\n    );    \n};\n\n// const linkStyle = {\n//     text-decoration: 'none';\n//     color: 'white';\n//     font-size: 20px;\n// }\n\nexport default Navigation;","import React from 'react';\nimport \"./registrationConfirmation.css\"\nimport {Link} from \"react-router-dom\";\n\nclass RegConfirmation extends React.Component{\n    render(){\n        return(\n            <div className=\"main-Container\">\n                <div className=\"head_01\">\n                    <h1>Welcome aboard!</h1>\n                    <p>Your account was successfully created. We have sent a confirmation link to your email address. Please click the link in your email to activate your account</p>\n\n                    <button type=\"submit\" className=\"btn_01\">\n                        <Link to=\"/userPage\">\n                            Back to Login\n                        </Link>\n                    </button>    \n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default RegConfirmation;\n\n\n","import React from 'react'\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io';\n\nexport const SideBarData = [\n    {\n        title: 'Home',\n        path: '/',\n        icon: <AiIcons.AiFillHome />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Reports',\n        path: '/reports',\n        icon: <IoIcons.IoIosPaper />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Products',\n        path: '/products',\n        icon: <FaIcons.FaCartPlus />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Team',\n        path: '/team',\n        icon: <IoIcons.IoMdPeople />,\n        cName: 'nav-text'\n    }\n\n]\n","import React, {useState} from 'react';\nimport \"./sideMenuStudent.css\";\nimport { FaBars, FaWindowClose } from \"react-icons/fa\";\nimport {Link} from \"react-router-dom\";\nimport {SideBarData} from './SideBarData';\nimport { IconContext } from 'react-icons';\n\nfunction SideMenuStudent(){\n    const [sideBar, setSideBar] = useState(false)\n\n    //function to change the state of the variable \n    const showSideBar = () => setSideBar(!sideBar)\n    return(\n        <>\n        <IconContext.Provider value={{color: 'red'}}>\n            <div className=\"navBar01\">\n\n                <Link to=\"#\" className='menu-bars'>\n                    <FaBars onClick={showSideBar}/>\n                </Link>\n            </div>\n\n            <nav className={sideBar ? 'nav-menu active' : 'nav-menu'}>\n                <ul className='nav-menu-items' onClick={showSideBar}>\n                    <li className=\"navbar-toggle\">\n                        <a href=\"#\" className=\"menu-bar\">\n                            <FaWindowClose />\n\n                        </a>\n                    </li>\n                    {SideBarData.map((item, index) => {\n                        return(\n                            <li key={index} className={item.cName}>\n                                <a href={item.path}>\n                                    {item.icon}\n                                    <span>{item.title}</span>\n                                </a>\n                            </li>\n                        )\n                    })}\n\n                </ul>\n            </nav>\n        </IconContext.Provider>\n        </>\n\n    )\n}\n\n\nexport default SideMenuStudent","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 12,\n  },\n  description: {\n      fontsize: 20,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard(props) {\n  \n  const classes = useStyles();\n  const { topic, status, course} = props\n  console.log(props)\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        // avatar={\n        //   <Avatar src={avatarSrc} />\n\n        // }\n        action={\n          <IconButton aria-label=\"settings\">\n            {/* <MoreVertIcon /> */}\n          </IconButton>\n        }\n        title={topic}\n        subheader={status}\n      />\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          Course title:\n        </Typography>\n        <Typography className={classes.description} variant=\"h5\" component=\"h2\">\n          {course}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={() => openThreadView(props)}>Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\n//function to open a question thread views\nfunction openThreadView(props){\n  //open up a new page that would allow the students to view the question threads\n  console.log(props);\n  localStorage.setItem(\"question_object\", props)\n  localStorage.setItem(\"topic\", props.topic)\n  localStorage.setItem(\"description\", props.description)\n  localStorage.setItem(\"professor\", props.professor)\n  localStorage.setItem(\"student_name\", props.studentName)\n  localStorage.setItem(\"status\", props.status)\n  localStorage.setItem(\"timestamp\", props.timestamp)\n\n  window.location = \"/QuestionThreadsView\";\n}","import React from 'react';\nimport \"./StudentCardView.css\";\nimport axios from 'axios';\nimport SimpleCard from \"./Card\";\nimport { Grid } from \"@material-ui/core\";\n// import { makeStyles } from '@material-ui/core/styles';\n\n// const studentID = localStorage.getItem(\"id\")\nconst studentID = localStorage.getItem(\"id\")\n\n\nclass StudentCardView extends React.Component{\n    //creating a state to store the question data object from the BE Api\n    state = {\n        questions: []\n    }\n    componentDidMount(){\n        //make an api call to the backend to display question belongs to this particular user\n        axios.get(`http://206.189.194.211:8080/getThisQuestion/${studentID}`)\n        // axios.get(`http://localhost:8080/getThisQuestion/${studentID}`)\n        .then(res => {\n            const questions = res.data;\n            this.setState({questions: questions});\n            console.log(questions);\n        })\n    }\n    render(){\n        // const useStyles = makeStyles({\n        //     gridContainer: {\n        //         paddingLeft: \"40px\",\n        //         paddingRight: \"40px\"\n        //     }\n        // })\n        //creating a question objects that store all the question information from the database\n        const {\n            questions\n        } = this.state;\n        //iterate through the list of question objects and populate them onto the card views\n        const getQuestionObjects = question => {\n            return(\n                <Grid item xs={12} sm={4}>\n                    <SimpleCard {...question} />\n                </Grid>\n            )\n        }\n\n        //if the question object is empty, as the user has not asked any questions, render nothing\n        if (questions){\n            return(\n                <Grid container spacing={4} style={{paddingLeft: \"40px\", paddingRight: \"40px\"}}>\n                    {questions.map(question => getQuestionObjects(question))}\n    \n                </Grid>\n            )\n        }\n\n        return(\n            <h1>You have no question asked yet!</h1>\n        )\n\n    }\n}\n\n\nexport default StudentCardView;\n\n","import React from 'react';\nimport \"./studentLandingPage.css\"\nimport logo from './img/favicon.ico'\nimport axios from 'axios';\nimport SideMenuStudent from './SideMenuStudent'\nimport StudentCardView from \"./StudentCardView\"\n\n\nconst username = localStorage.getItem('username')\nconst studentID= localStorage.getItem(\"id\")\nclass StudentLandingPage extends React.Component{\n    //creating a state to store the question data from the BE api\n    // state={\n    //     questions: []\n    // }\n\n    // componentDidMount(){\n    //     //make an api call to the backend for data\n    //     axios.get(`http://localhost:8000/getThisQuestion/${studentID}`)\n    //     // console.log(`http://localhost:8000/getThisQuestion/${studentID}`)\n    //     //Reponse handling from the server backend: \n    //     .then(res => {\n    //         const questions = res.data;\n    //         this.setState({questions: questions});\n    //         console.log(questions);\n    //     })\n\n    //     const {\n    //         questions\n    //     } = this.state;\n    // }\n\n    render(){\n        return(\n            <div>\n                <div className=\"show-data\">\n                    <SideMenuStudent />\n                    {/* <ul className=\"logo\">\n                        <li><a href=\"/\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></a></li>\n                    </ul> */}\n\n                    {/* <div className=\"message01\">Welcome {username}, {user_id} How can we help you?</div> */}\n                    <form onSubmit={(e) => sendQuestion(e)}>\n                        <div className=\"input_box\">\n                            <h2>Ask question</h2>\n                            <div className=\"form-group\">\n                                <label className=\"course_name\">Course Name </label>\n                                <input type=\"text\" id=\"course\" className=\"courseClass\"placeholder=\"course name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                    <label className=\"topic_01\">Topic </label>\n                                    <input type=\"text\" id=\"topic\" className=\"topicClass\" placeholder=\"Topic\" onChange={this.handleChange}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"Professor_01\">Professor Name </label>\n                                <input type=\"text\" id=\"professor\" className=\"professorClass\" placeholder=\"professor\" />\n                            </div>\n                            <div className=\"input_area\">\n                                <label className=\"quesDesc\">How can we help you? </label>\n                                <textarea className=\"textBox\" id=\"questionDescription\" placeholder=\"Enter your problem here\"></textarea>\n\n                            </div>\n\n                            <div className=\"footer\">\n                                <button type=\"submit\" className=\"btn\">SUBMIT</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <StudentCardView />\n\n            </div>\n\n\n        )\n    }\n}\n\n//Function to group the data from the form and send it out as a JSON package\nfunction sendQuestion(e){\n    e.preventDefault();\n    const timestamp = new Date()\n    const timestamp_Formated= new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(timestamp);\n    // console.log(timestamp_Formated)\n    //creating a request object to send out\n    let request = {\n        studentName: username,\n        student_ID: studentID,\n        course: document.getElementById('course').value,\n        topic: document.getElementById('topic').value,\n        professor: document.getElementById('professor').value,\n        description: document.getElementById('questionDescription').value,\n        status: \"new\",\n        timestamp: timestamp_Formated\n    }\n\n    //axio command to make send the package to the BE: \n    axios.post('http://206.189.194.211:8080/question', request)\n    // axios.post('http://localhost:8080/question', request)\n    //server reponse handling: \n    .then(response => {\n        console.log(\"Server with something back...\")\n        console.log(request)\n        alert(\"We have managed to recieved a quesiton from you, please hang tight and we will get back to you with an answer\")\n    })\n\n    .catch(err => {\n        console.log(err);\n        console.log(request);\n    });\n}\n\n\nexport default StudentLandingPage;\n","import React from 'react';\nimport \"./TutorLandingPage.css\"\n// import logo from './img/favicon.ico'\nimport axios from 'axios';\n\nclass TutorLandingPage extends React.Component{\n    //creating a state to store the question data from the BE api\n    state={\n        questions: []\n    }\n\n    componentDidMount(){\n        //make a api call to the backend for question data\n        axios.get('http://206.189.194.211:8080/getAllQuestions')\n        // axios.get('http://localhost:8000/getAllQuestions')\n        .then(res => {\n            const questions = res.data;\n            this.setState({questions: questions});\n            console.log(questions)\n        })\n    }\n    //Populate data within the table\n    renderTableData(){\n        //render question data retrieved from the API onto the FE\n        const {\n            questions\n        } = this.state;\n        \n        return questions.map((question, index) => {\n            const {id, course, topic, professor, timestamp, description, studentName, status} = question //deconstructing the question object\n            return(\n                <tr key={id} onClick={() => fetchTableData(question)}>\n                    <td>{id}</td>\n                    <td>{studentName}</td>\n                    <td>{topic}</td>\n                    <td>{course}</td>\n                    <td>{description}</td>\n                    <td>{professor}</td>\n                    <td>{timestamp}</td>\n                    <td>{status}</td>\n\n                </tr>\n            )\n        })\n    }\n    // //Function to return the header of the table\n    // renderTableHeader(){\n    //     // //render question data retrieved from the API onto the FE\n    //     const {\n    //         questions\n    //     } = this.state;\n    //     console.log(questions[0])\n                \n    //     let header = Object.keys(questions[0])\n    //     console.log(header)\n    //     return header.map((key, index) => {\n    //         // console\n    //     return  <th key={index}>{key.toUpperCase()}</th>\n    //     })\n\n    // }\n\n    render(){\n\n        // console.log(questions)\n        return(\n            <div>\n                \n                <table id='questions'>\n                    <tbody>\n                        <th>ID</th>\n                        <th>Student</th>\n                        <th>Topic</th>\n                        <th>Course</th>\n                        <th>Description</th>\n                        <th>Professor</th>\n                        <th>Date Sent</th>\n                        <th>Status: </th>\n\n                        {/* <tr>{this.renderTableHeader()}</tr> */}\n                        {this.renderTableData()}\n                    </tbody>\n                </table>\n\n                {/* { questions.map(question => <li>{question.topic}</li>)} */}\n            </div>\n        )\n    }\n}\n\n//Function fetch data from the table in the table.\nfunction fetchTableData(data){\n    console.log(data);\n    //storing the table row data from the click into the localstorage. \n    localStorage.setItem('topic', data.topic);\n    localStorage.setItem('description', data.description);\n    localStorage.setItem('studentName', data.studentName);\n    localStorage.setItem('professor', data.professor);\n    localStorage.setItem('courseName', data.course);\n    localStorage.setItem('timeStamp', data.timestamp);\n    localStorage.setItem('status', data.status);\n    \n    window.location = \"/AnswerPage\"\n\n}\n\n\n\n\n\nexport default TutorLandingPage;","//React component that stores the tutor accout processing for users\nimport React from 'react';\nimport \"./AnswerPage.css\";\nimport {FaHome} from 'react-icons/fa';\n//getting the question information from the table that was stored in the localstorage\nconst topic = localStorage.getItem(\"topic\");\nconst description = localStorage.getItem(\"description\");\nconst studentName = localStorage.getItem(\"studentName\");\nconst professor = localStorage.getItem(\"professor\");\nconst course = localStorage.getItem(\"courseName\");\nconst timeStamp = localStorage.getItem('timeStamp');\nconst status = localStorage.getItem('status');\n// console.log(questionInfo);\nclass AnswerPage extends React.Component{\n    render(){\n        return(\n            <div className=\"show-data\">\n                <div className=\"navBar_01\">\n                    <FaHome />\n                </div>\n                <div className=\"question-info\">\n                    <div className=\"Topic\">\n                        <h3>{topic}</h3>\n\n                        <div className=\"Course\">\n                            Course: <span>{course}</span>\n                        </div>\n                    </div>\n                    <div className=\"Description\">\n                            <span>Description:</span>\n                            <br></br> \n                            <p>{description}</p>\n                    </div>\n                    <div className=\"case-info\">\n                        <div className=\"info1\">\n                            <div className=\"student-name\">\n                                <span>Student Username: </span>\n                                <p>{studentName}</p>\n                            </div>\n                            <div className=\"prof-name\">\n                                    <span>Professor Name: </span>\n                                    <p>{professor}</p>\n                            </div>\n                        </div>\n                        <div className=\"info2\">\n                            <div className=\"time-stamp\">\n                                <span>Recieved at: </span>\n                                <p>{timeStamp}</p>\n                            </div>\n                            <div className=\"Status\">\n                                <span>Status: </span>\n                                <p>{status}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"answer-question\">\n                    <form onSubmit={(e) => sendAnswer(e)}>\n                        <div className=\"answer-box\">\n                            <textarea className=\"answerBox\" id=\"explanation\" placeholder=\"Enter your resolution of the issue...\"></textarea>\n                        </div>\n                        <div className=\"sendAns\">\n                                <button type=\"submit\" className=\"btn\">Submit Response</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\n//Function to send the answer to the user \nfunction sendAnswer(e){\n    e.preventDefault();\n    const answer = document.getElementById('explanation').value\n    console.log(answer);\n}\n\nexport default AnswerPage;\n","import React from \"react\";\nimport \"./QuestionThreadView.css\";\n\n//Getting the information about the question that needs to be created\n// const questionObject = localStorage.getItem(\"question_object\");\nconst topic = localStorage.getItem(\"topic\");\nconst description = localStorage.getItem(\"description\");\nconst professor = localStorage.getItem(\"professor\");\nconst student_name = localStorage.getItem(\"student_name\");\nconst status = localStorage.getItem(\"status\");\nconst timeStamp = localStorage.getItem(\"timestamp\");\n\nclass QuestionThreadsView extends React.Component{\n    //function to render out components\n    render(){\n        return(\n            <div className=\"showInfo\">\n                <div className=\"description-header\">\n                    <h1>{student_name}</h1>\n                    <h2>{topic}</h2>\n\n                </div>\n                \n                <p>{description}</p>\n                <h3>{status}</h3>\n                <h3>{timeStamp}</h3>\n                \n            </div>\n        )\n    }\n}\n\n\n\n//export the function\nexport default QuestionThreadsView;","import React from 'react';\nimport \"./registrationLogin.css\"\nimport axios from 'axios';\n // @ts-ignore  \n import jwt_decode from \"jwt-decode\";\n// import StudentLandingPage from \"./studentLandingPage\"\n\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n\n    }\n\n    render(){\n        return(\n            \n            <div className=\"base-container\" ref={this.props.containerRef}>\n                <form onSubmit={(e) => login(e)}>\n                    <div className=\"header\">Login</div>\n                    <div className=\"content\">\n                        {/* <div className=\"image\">\n                            <p>image goes here!</p>\n                        </div> */}\n\n                        <div className=\"form\">\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username: </label>\n                                <input type=\"text\" id=\"username\" placeholder=\"username\" onChange={this.handleChange}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password: </label>\n                                <input type=\"password\" id=\"password\" placeholder=\"password\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"footer\">\n                        <button type=\"submit\" className=\"btn\">Login</button>\n                    </div>                            \n                </form>\n            </div>\n\n        )\n    }\n}\n\n//function to group the data and send them out via Json.\nfunction login(e){\n    e.preventDefault();\n    let request = {\n        username: document.getElementById('username').value,\n        password: document.getElementById('password').value\n    }\n    axios.post('http://206.189.194.211:8000/login', request)\n    // axios.post('http://localhost:8000/login', request)\n    .then(response => {\n        // alert(response.data.message);\n        console.log(request);\n        console.log(response.data.result) //response back from server\n        console.log(response.data.error)  // two type: invalid password or username\n        // //Variable to store the reponse from the server\n        var goodRes = response.data.result\n        var errorMessage = response.data.error\n\n        // //alert the error to the user\n        if(errorMessage === \"Invalid password\" || errorMessage === \"Invalid Username\"){\n            alert(errorMessage)\n        }\n        \n        else{\n            // alert(goodRes)\n            //decode the jwt sent in from the server. \n            var decode = jwt_decode(goodRes);\n            console.log(decode)\n            //If the user type is a tutor direct them to a tutor page\n            if (decode.student == true){\n                //Creating a cookie with the username \n                localStorage.setItem('username', decode.username)\n                localStorage.setItem('id', decode.id)\n\n                window.location = \"/studentLandingPage\";\n            }\n\n            if (decode.tutor == true){\n                localStorage.setItem('username', decode.username)\n                window.location = \"/TutorLandingPage\";\n\n            }\n\n        }\n        \n    })\n    .catch(err => {\n        console.log(err);\n        console.log(request);\n    })\n}\n\nexport default Login;","import React from 'react';\nimport \"./registrationLogin.css\"\nimport axios from 'axios';\n// import {Link} from \"react-router-dom\";\n// import RegConfirmation from './registrationConfirmation';\nclass Register extends React.Component{\n    constructor(prop){\n        super(prop);\n    }\n\n    render(){\n        return(\n            <div className=\"base-container\" ref={this.props.containerRef}>\n                <form onSubmit={(e) => registrattion(e)}>\n                <div className=\"header\">Register</div>\n                <div className=\"content\">\n                    {/* <div className=\"image\">\n                        <p>image goes here!</p>\n                    </div> */}\n                    <div className=\"form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username: </label>\n                            <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"username\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Email: </label>\n                            <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"email\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password: </label>\n                            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn\">Register</button>\n                </div>\n                </form>\n            </div>\n\n        )\n    }\n}\n\n//function to group the data and send them out via Json.\nfunction registrattion(e){\n    e.preventDefault();\n    //setting header for the request\n    // let config = {\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       \"Access-Control-Allow-Methods\": 'OPTIONS,POST,GET, DELETE',\n    //       'Access-Control-Allow-Headers': '*',\n    //       'Access-Control-Allow-Origin': '*'\n          \n    //       }\n    //     }\n        \n    let request = {\n        username: document.getElementById('username').value,\n        email: document.getElementById('email').value,\n        password: document.getElementById('password').value\n    }\n\n    axios.post('http://206.189.194.211:8000/register', request)\n    // axios.post('http://localhost:8000/register', request)\n    .then(response => {\n        // alert(response.data.message);\n        console.log(request);   //Data object being sent out\n        //object received \n        // console.log(response.data.result)\n        // console.log(response.data.error)\n        var server_response = response.data.result\n        // var error = response.data.error\n        // console.log(goodRes)\n    \n        //if the username is already in the database: then let the user know and dont redirect to confirmation page\n        if (server_response == \"Username Already Exists!\"){\n            alert(server_response)\n        }\n        //redirect to a page confirmation page if no error is sent back from the server\n        else{\n            window.location = \"/registrationConfirmation\";\n        }\n        \n    })\n\n    //Error handling: \n    .catch(err => {\n        console.log(err);\n        console.log(request);\n    })\n}\n\n\nexport default Register;","//main page to handle user login and registration forms:\nimport React from \"react\";\nimport Login from \"./Login\";\nimport Register from \"./Registraion\";\nimport \"./userPage.css\";\n\n\nclass UserFields extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoginActive: true,\n\n        };\n    }\n\n    // componentDidMount() {\n    //     //Add .right by default\n    //     this.rightSide.classList.add(\"right\");\n    //   }\n    \n\n    changeState(){\n        const { isLoginActive } = this.state;\n        //if the login page is active, so the login button on the right side\n        if(isLoginActive) {\n            this.RightSide.classList.remove(\"right\");\n            this.RightSide.classList.add(\"left\");\n\n        } else {\n            this.RightSide.classList.remove(\"left\");\n            this.RightSide.classList.add(\"right\");\n        }\n\n        this.setState((prevState) => ({ isLoginActive: !prevState.isLoginActive }));\n    }\n\n    render(){\n        const {isLoginActive } = this.state;\n        //this variable to check whether we are looking at the register forms or login forms\n        const current = isLoginActive ? \"New user? Create an account\" : \" Already have an account? Sign in\";\n        const currentActive = isLoginActive ? \"Login\" : \"Register\";\n        return(\n        <div className=\"wrapper\">\n            <div className=\"mainContainer\">\n                <div className=\"Login\">\n                    <div className=\"containerN\">\n                        {isLoginActive && <Login containerRef={(ref) => this.current = ref}/> }\n                        {!isLoginActive && <Register containerRef={(ref) => this.current = ref}/>}\n                    </div>\n                    <RightSide current={current} currentActive={currentActive} containerRef={ref => this.RightSide = ref} onClick={this.changeState.bind(this)}/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\n\nconst RightSide = props => {\n    return (<div className=\"right-side\" ref={props.containerRef} onClick={props.onClick}>\n    <div className=\"inner-container\">\n        <div className=\"text\" style={{color: \"white\"}}>{props.current}</div>\n    </div>\n</div>);\n};\n\nexport default UserFields;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Welcome from './Welcome';\nimport Footer from './footer';\nimport Promotion from './Promotion';\nimport Faq from './Faq';\nimport Disclaimer from './Disclaimer';\nimport Navigation from './Navigation';\nimport RegConfirmation from './registrationConfirmation';\nimport StudentLandingPage from './studentLandingPage';\nimport TutorLandingPage from './TutorLandingPage';\nimport AnswerPage from './AnswerPage';\nimport SideMenuStudent from './SideMenuStudent';\nimport StudentCardView from './StudentCardView';\nimport QuestionThreadsView from './QuestionThreadsView';\n// import Registration from './Registraion';\n// import Login from './Login';\nimport UserFields from './userPage';\nclass App extends Component{\n  render(){\n    return(\n      <div>\n        <Router>\n          <div className=\"Router-test\">\n            <Switch>\n              <Route path=\"/\" exact component={Main} />\n              <Route path=\"/userPage\" component={UserFields}/>\n              <Route path=\"/registrationConfirmation\" component={RegConfirmation}/>\n              <Route path=\"/studentLandingPage\" component={StudentLandingPage} />\n              <Route path=\"/TutorLandingPage\" component={TutorLandingPage} />\n              <Route path=\"/AnswerPage\" component={AnswerPage} />\n              <Route path=\"/SideMenuStudent\" component={SideMenuStudent} />\n              <Route path=\"/StudentCardView\" component={StudentCardView} />\n              <Route path=\"/QuestionThreadsView\" component={QuestionThreadsView} />\n\n            </Switch>\n\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\n\nclass Main extends Component{\n  render(){\n    return(\n      <div>\n        <Navigation/>\n        <Welcome />\n        <Promotion />\n        <Disclaimer />\n        <div className=\"faq-header\">\n          <h1>FAQs</h1>\n        </div>\n        <Faq title=\"What is Toodle?\" content=\"Toodle is an online tutoring that allows student to ask a tutor any question\"/>\n        <Faq title=\"Why use Toodle?\" content=\"Toodle is an online tutoring that allows student to ask a tutor any question\"/>\n        <Faq title=\"How does Toodle work?\" content=\"Toodle is an online tutoring that allows student to ask a tutor any question\"/>\n        <Faq title=\"How long can I get a tutor response?\" content=\"Toodle is an online tutoring that allows student to ask a tutor any question\"/>\n        <Faq title=\"How do I start asking question on Toodle?\" content=\"Toodle is an online tutoring that allows student to ask a tutor any question\"/>\n\n        <Footer />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/favicon.9c77ce03.ico\";","module.exports = __webpack_public_path__ + \"static/media/Best-Programming-Languages-to-Start-Learning-Today.7b8d9a65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Competitive-Programming-1.096339a2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/download.49b36068.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/placeholder.76b2bfd3.png\";"],"sourceRoot":""}