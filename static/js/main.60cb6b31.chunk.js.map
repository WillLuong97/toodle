{"version":3,"sources":["serviceWorker.js","Welcome.js","footer.js","Promotion.js","Faq.js","Disclaimer.js","Navigation.js","registrationConfirmation.js","SideBarData.js","SideMenuStudent.js","Card.js","StudentCardView.js","studentLandingPage.js","TutorLandingPage.js","ReplySessionCardView.js","AnswerThreadView.js","TutorReplyBoxView.js","DisplayOriginalQuestionPost.js","TutorAnsweringView.js","AnswerPage.js","StudentReplyBox.js","QuestionThreadViewSingleCard.js","QuestionThreadsView.js","Login.js","Registraion.js","userPage.jsx","index.js","img/favicon.ico","img/placeHolderPic.png","img/Best-Programming-Languages-to-Start-Learning-Today.jpg","img/Competitive-Programming-1.jpg","img/download.jpeg","img/placeholder.png"],"names":["Boolean","window","location","hostname","match","Welcome","className","React","Component","Footer","src","logo","alt","href","name","Promotion","img1","img2","img3","Faq","props","useState","setActive","setActiveState","setHeight","setHeighState","content","useRef","onClick","current","scrollHeight","title","ref","style","maxHeight","dangerouslySetInnerHTML","__html","Disclaimer","Navigation","navbar","setNavBar","addEventListener","scrollY","to","RegConfirmation","type","SideBarData","path","icon","cName","SideMenuStudent","sideBar","setSideBar","showSideBar","Provider","value","color","map","item","index","key","useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","fontSize","description","fontsize","pos","marginBottom","SimpleCard","classes","topic","status","course","console","log","Card","CardHeader","action","IconButton","aria-label","subheader","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","size","localStorage","setItem","professor","studentName","timestamp","_id","openThreadView","studentID","getItem","placeHolder_style","paddingLeft","textStyle","textAlign","StudentCardView","state","questions","axios","get","then","res","data","setState","this","Grid","container","spacing","paddingRight","question","xs","sm","getQuestionObjects","tempPic","username","StudentLandingPage","onSubmit","e","preventDefault","Date","timestamp_Formated","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","request","student_ID","document","getElementById","post","response","alert","catch","err","sendQuestion","id","placeholder","onChange","handleChange","TutorLandingPage","renderTableData","theme","maxWidth","media","height","paddingTop","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","RecipeReviewCard","tutorName","answer","Avatar","placeHolder_style_01","textStyle_01","question_id","AnswerThreadView","answers","Axios","paddingBottom","getAnswerObject","tempPic_01","questionID","tutor_id","TutorReplyBoxView","reply_TIME","reply_TIME_FORMATTED","tutorID","reload","sendAnswer","width","position","timeStamp","DisplayOriginalQuestionPost","appBar","drawer","flexShrink","flexGrow","drawerPaper","toolbar","mixins","palette","background","default","padding","PermanentDrawerLeft","CssBaseline","AppBar","Toolbar","noWrap","Drawer","paper","anchor","Divider","List","text","ListItem","button","ListItemText","primary","AnswerPage","student_name","StudentReplyBox","sendFollowUp","SingleQuestionCardView","QuestionThreadsView","Login","containerRef","password","result","error","goodRes","errorMessage","decode","jwt_decode","student","tutor","login","htmlFor","Register","prop","email","server_response","registrattion","UserFields","isLoginActive","RightSide","classList","remove","add","prevState","currentActive","changeState","bind","App","exact","Main","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.60cb6b31.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './Welcome.css';\n//import background image\n// import Background from './img/img02.jpg';\n// const backgroundStyle = {backgroundImage: `url(${Background})`, height:\"100vh\", backgroundsize: 'cover'}\n\n\nclass Welcome extends React.Component{\n    render(){\n        return (\n            <div className=\"container\">\n                <h1>Tutoring re-imagined.</h1>\n                <h1>Ask anywhere, answer anytime.</h1>  \n            </div>\n                \n                         \n            \n        );\n    };\n};\n\n\n//displaying the component in the \nexport default Welcome;","import React from 'react';\nimport './footer.css';\n// import {Link} from \"react-router-dom\";\n//import logo \nimport logo from './img/favicon.ico'\n\n\nclass Footer extends React.Component{\n    render(){\n        return (\n            <div className=\"Footer\">\n                <div className=\"Toodle-Link\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <a href=\"#button\">Toodle</a>\n                </div>\n                <div className=\"about-link\">\n                    <a href=\"#button\">About us</a>\n                </div>\n\n                <div className=\"privacy-link\">\n                    <a href=\"#button\">Privacy</a>\n                </div>\n\n                <div className=\"term-link\">\n                    <a href=\"#button\">Terms</a>\n                </div>\n\n                <div className=\"support-link\">\n                    <a href=\"#button\">Support</a>\n                </div>\n                   \n                <div className=\"Icon\">\n                    <div>\n                        <span>\n                            <a href=\"#button\"><ion-icon name=\"logo-facebook\"></ion-icon></a>\n                            <a href=\"#button\"><ion-icon name=\"logo-twitter\"></ion-icon></a>\n                            \n                        </span>\n                    </div>\n                \n\n                </div>    \n            </div>\n\n        );\n    };\n};\n\nexport default Footer;","import React from 'react';\nimport './Promotion.css';\nimport img1 from './img/Best-Programming-Languages-to-Start-Learning-Today.jpg';\nimport img2 from './img/Competitive-Programming-1.jpg'\nimport img3 from './img/download.jpeg'\nclass Promotion extends React.Component{\n    render(){\n        return(\n            <div className=\"Contents\">\n\n                <div className=\"Header\">\n                    <h1>Get your question answered with Toodle</h1>\n                    <p>You can get free tutor helps on your homework. Tutor are available to answer your question the moment you sent to us</p>\n                </div>\n                \n                <div className=\"Courses\">\n                    <div className=\"prog-lang\">\n                        <img src={img1} className=\"img1\" alt=\"logo\" />\n                        <h2>Programming Langues: Python, Java</h2>\n                    </div>\n\n                    <div className=\"prog-lang\">\n                        <img src={img2} className=\"img1\" alt=\"logo\" />\n                        <h2>Algorithm & Data Structure</h2>\n                    </div>\n\n                    <div className=\"prog-lang\">\n                        <img src={img3} className=\"img1\" alt=\"logo\" />\n                        <h2>Sciences</h2>\n                    </div>\n\n\n                    {/* <div className=\"algo-data\">\n                        <img src={img2} className=\"img1\" alt=\"logo\" />\n                        <h2>Algorithm & Data Structure</h2>\n                        \n                    </div>\n\n                    <div className=\"science\">\n                        <img src={img3} className=\"img1\" alt=\"logo\" />\n\n                        <h2>Sciences</h2>\n                    </div> */}\n                        \n                </div>\n\n            </div>\n\n        );\n    };\n};\n\n//Export the components: \nexport default Promotion;","import React, {useState, useRef } from \"react\";\n\nimport \"./Faq.css\";\n\n\nfunction Faq(props){\n\n    const [setActive, setActiveState] = useState(\"\");\n    const [setHeight, setHeighState] = useState(\"0px\");\n\n    const  content = useRef(null);\n\n    function toggleAccordion(){\n        setActiveState(setActive === \"\" ? \"active\": \"\");\n        setHeighState(setActive === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`)\n\n    }\n\n\n\n    return(\n        <div className=\"accordion__section\">\n            <button className={`accordion ${setActive}`} onClick={toggleAccordion}>\n                <p className='accordion__title'>{props.title}</p>\n            </button>\n\n            <div ref={content} style= {{maxHeight: `${setHeight}`}}className=\"accordion__content\">\n                <div className=\"accordion__text\" dangerouslySetInnerHTML={{ __html: props.content }}>\n\n                    \n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Faq;","import React from 'react';\nimport './Disclaimer.css';\nimport img1 from './img/placeholder.png'\n\nclass Disclaimer extends React.Component{\n    render(){\n        return(\n            <div className=\"Disclaimer\">\n                <div className=\"d01\">Ask Instantly, everywhere</div>\n                <div className=\"d02\">No appointment, no meetup, just ask and get answered</div>\n                <div className=\"d03\">\n                    Get answered to your homework question right in the comfort of your home or dorm room without the hastle of scheduling an appointment\n                </div>\n                <div className=\"picture\">\n                    <img src={img1} className=\"img1\" alt=\"logo\"/>\n\n                </div>\n            </div>\n\n            \n        )\n    }\n}\n\nexport default Disclaimer;","import React, {useState, useEffect } from 'react';\nimport logo from './img/favicon.ico'\nimport './Navigation.css';\nimport {Link} from \"react-router-dom\";\n\nfunction Navigation(){\n    //set the state to be changed later.\n    const [navbar, setNavBar] = useState(false);\n\n    //create a funtion that showcase the scroll\n    const changeBackground = () => {\n        // console.log(window.scrollY); //check if the vertical scroll works on our page\n        if(window.scrollY >= 120) {\n            setNavBar(true)\n            \n        } else {\n            setNavBar(false);\n        }\n    }\n\n    window.addEventListener('scroll', changeBackground);\n    \n    return(\n        <nav className={navbar ? 'navbarActive' : 'navBar'}>\n            <ul className=\"logo\">\n                <li><a href=\"#button\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></a></li>\n            </ul>\n            <ul className=\"links\">\n                <li><a href=\"#About\">About</a></li>\n                <li><a href=\"#contact\">Contact Us</a></li>\n                <li><a href=\"#becomeTutor\">Become a Tutor</a></li>\n            </ul>\n\n            <ul className=\"button\">\n                <Link to=\"/userPage\">\n                    <li>Try Toodle</li>\n                </Link>\n                \n                {/* <li><a href=\"/userPage\">Try Toodle for Free</a></li> */}\n            </ul>\n        </nav>\n    );    \n};\n\n// const linkStyle = {\n//     text-decoration: 'none';\n//     color: 'white';\n//     font-size: 20px;\n// }\n\nexport default Navigation;","import React from 'react';\nimport \"./registrationConfirmation.css\"\nimport {Link} from \"react-router-dom\";\n\nclass RegConfirmation extends React.Component{\n    render(){\n        return(\n            <div className=\"main-Container\">\n                <div className=\"head_01\">\n                    <h1>Welcome aboard!</h1>\n                    <p>Your account was successfully created. We have sent a confirmation link to your email address. Please click the link in your email to activate your account</p>\n\n                    <button type=\"submit\" className=\"btn_01\">\n                        <Link to=\"/userPage\">\n                            Back to Login\n                        </Link>\n                    </button>    \n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default RegConfirmation;\n\n\n","import React from 'react'\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport * as IoIcons from 'react-icons/io';\n\nexport const SideBarData = [\n    {\n        title: 'Home',\n        path: '/',\n        icon: <AiIcons.AiFillHome />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Reports',\n        path: '/reports',\n        icon: <IoIcons.IoIosPaper />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Products',\n        path: '/products',\n        icon: <FaIcons.FaCartPlus />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Team',\n        path: '/team',\n        icon: <IoIcons.IoMdPeople />,\n        cName: 'nav-text'\n    }\n\n]\n","import React, {useState} from 'react';\nimport \"./sideMenuStudent.css\";\nimport { FaBars, FaWindowClose } from \"react-icons/fa\";\nimport {Link} from \"react-router-dom\";\nimport {SideBarData} from './SideBarData';\nimport { IconContext } from 'react-icons';\n\nfunction SideMenuStudent(){\n    const [sideBar, setSideBar] = useState(false)\n\n    //function to change the state of the variable \n    const showSideBar = () => setSideBar(!sideBar)\n    return(\n        <>\n        <IconContext.Provider value={{color: 'red'}}>\n            <div className=\"navBar01\">\n\n                <Link to=\"#\" className='menu-bars'>\n                    <FaBars onClick={showSideBar}/>\n                </Link>\n            </div>\n\n            <nav className={sideBar ? 'nav-menu active' : 'nav-menu'}>\n                <ul className='nav-menu-items' onClick={showSideBar}>\n                    <li className=\"navbar-toggle\">\n                        <a href=\"#\" className=\"menu-bar\">\n                            <FaWindowClose />\n\n                        </a>\n                    </li>\n                    {SideBarData.map((item, index) => {\n                        return(\n                            <li key={index} className={item.cName}>\n                                <a href={item.path}>\n                                    {item.icon}\n                                    <span>{item.title}</span>\n                                </a>\n                            </li>\n                        )\n                    })}\n\n                </ul>\n            </nav>\n        </IconContext.Provider>\n        </>\n\n    )\n}\n\n\nexport default SideMenuStudent","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 12,\n  },\n  description: {\n      fontsize: 20,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard(props) {\n  \n  const classes = useStyles();\n  const { topic, status, course} = props\n  console.log(props)\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        // avatar={\n        //   <Avatar src={avatarSrc} />\n\n        // }\n        action={\n          <IconButton aria-label=\"settings\">\n            {/* <MoreVertIcon /> */}\n          </IconButton>\n        }\n        title={topic}\n        subheader={status}\n      />\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          Course title:\n        </Typography>\n        <Typography className={classes.description} variant=\"h5\" component=\"h2\">\n          {course}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={() => openThreadView(props)}>Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\n//function to open a question thread views\nfunction openThreadView(props){\n  //open up a new page that would allow the students to view the question threads\n  console.log(props);\n  localStorage.setItem(\"question_object\", props)\n  localStorage.setItem(\"topic\", props.topic)\n  localStorage.setItem(\"description\", props.description)\n  localStorage.setItem(\"professor\", props.professor)\n  localStorage.setItem(\"student_name\", props.studentName)\n  localStorage.setItem(\"status\", props.status)\n  localStorage.setItem(\"timestamp\", props.timestamp)\n  localStorage.setItem(\"questionID\", props._id)\n\n  window.location = \"/QuestionThreadsView\";\n}","import React from 'react';\n// import \"./StudentCardView.css\";\nimport axios from 'axios';\nimport SimpleCard from \"./Card\";\nimport { Grid } from \"@material-ui/core\";\nimport tempPic from \"./img/placeHolderPic.png\";\n// import { makeStyles } from '@material-ui/core/styles';\n\n// const studentID = localStorage.getItem(\"id\")\nconst studentID = localStorage.getItem(\"id\")\n\n//inline styling for the place holders: \nvar placeHolder_style = {\n    paddingLeft: \"33%\"\n    \n}\n\nvar textStyle = {\n    fontSize: 20,\n    color: \"#4a54f1\",\n    textAlign: \"center\",\n\n}\n\nclass StudentCardView extends React.Component{\n    //creating a state to store the question data object from the BE Api\n    state = {\n        questions: []\n    }\n    componentDidMount(){\n        //make an api call to the backend to display question belongs to this particular user\n        axios.get(`http://206.189.194.211:8080/getThisQuestion/${studentID}`)\n        // axios.get(`http://localhost:8080/getThisQuestion/${studentID}`)\n        .then(res => {\n            const questions = res.data;\n            this.setState({questions: questions});\n            console.log(questions);\n        })\n    }\n    render(){\n        // const useStyles = makeStyles({\n        //     gridContainer: {\n        //         paddingLeft: \"40px\",\n        //         paddingRight: \"40px\"\n        //     }\n        // })\n        //creating a question objects that store all the question information from the database\n        const {\n            questions\n        } = this.state;\n        //iterate through the list of question objects and populate them onto the card views\n        const getQuestionObjects = question => {\n            return(\n                <Grid item xs={12} sm={4}>\n                    <SimpleCard {...question} />\n                </Grid>\n            )\n        }\n\n        //if the question object is empty, as the user has not asked any questions, render nothing\n        if (questions){\n            return(\n                <Grid container spacing={4} style={{paddingLeft: \"40px\", paddingRight: \"40px\"}}>\n                    {questions.map(question => getQuestionObjects(question))}\n    \n                </Grid>\n            )\n        }\n\n        return(\n            <div>\n                <img src={tempPic} style={placeHolder_style} />\n                <h1 style={textStyle}>You have no active question right now!</h1>\n            </div>\n        )\n\n    }\n}\n\n\nexport default StudentCardView;\n\n","import React from 'react';\nimport \"./studentLandingPage.css\"\nimport logo from './img/favicon.ico'\nimport axios from 'axios';\nimport SideMenuStudent from './SideMenuStudent'\nimport StudentCardView from \"./StudentCardView\"\n\n\nconst username = localStorage.getItem('username')\nconst studentID= localStorage.getItem(\"id\")\n\nclass StudentLandingPage extends React.Component{\n    //creating a state to store the question data from the BE api\n    // state={\n    //     questions: []\n    // }\n\n    // componentDidMount(){\n    //     //make an api call to the backend for data\n    //     axios.get(`http://localhost:8000/getThisQuestion/${studentID}`)\n    //     // console.log(`http://localhost:8000/getThisQuestion/${studentID}`)\n    //     //Reponse handling from the server backend: \n    //     .then(res => {\n    //         const questions = res.data;\n    //         this.setState({questions: questions});\n    //         console.log(questions);\n    //     })\n\n    //     const {\n    //         questions\n    //     } = this.state;\n    // }\n\n    render(){\n        return(\n            <div>\n                <div className=\"show-data\">\n                    <SideMenuStudent />\n                    {/* <ul className=\"logo\">\n                        <li><a href=\"/\"><img src={logo} className=\"App-logo\" alt=\"logo\" /></a></li>\n                    </ul> */}\n\n                    {/* <div className=\"message01\">Welcome {username}, {user_id} How can we help you?</div> */}\n                    <form onSubmit={(e) => sendQuestion(e)}>\n                        <div className=\"input_box\">\n                            <h2>Ask question</h2>\n                            <div className=\"form-group\">\n                                <label className=\"course_name\">Course Name </label>\n                                <input type=\"text\" id=\"course\" className=\"courseClass\"placeholder=\"course name\" />\n                            </div>\n                            <div className=\"form-group\">\n                                    <label className=\"topic_01\">Topic </label>\n                                    <input type=\"text\" id=\"topic\" className=\"topicClass\" placeholder=\"Topic\" onChange={this.handleChange}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label className=\"Professor_01\">Professor Name </label>\n                                <input type=\"text\" id=\"professor\" className=\"professorClass\" placeholder=\"professor\" />\n                            </div>\n                            <div className=\"input_area\">\n                                <label className=\"quesDesc\">How can we help you? </label>\n                                <textarea className=\"textBox\" id=\"questionDescription\" placeholder=\"Enter your problem here\"></textarea>\n\n                            </div>\n\n                            <div className=\"footer\">\n                                <button type=\"submit\" className=\"btn\">SUBMIT</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <StudentCardView />\n\n            </div>\n\n\n        )\n    }\n}\n\n//Function to group the data from the form and send it out as a JSON package\nfunction sendQuestion(e){\n    e.preventDefault();\n    const timestamp = new Date()\n    const timestamp_Formated= new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(timestamp);\n    // console.log(timestamp_Formated)\n    //creating a request object to send out\n    let request = {\n        studentName: username,\n        student_ID: studentID,\n        course: document.getElementById('course').value,\n        topic: document.getElementById('topic').value,\n        professor: document.getElementById('professor').value,\n        description: document.getElementById('questionDescription').value,\n        status: \"new\",\n        timestamp: timestamp_Formated\n    }\n\n    //axio command to make send the package to the BE: \n    axios.post('http://206.189.194.211:8080/question', request)\n    // axios.post('http://localhost:8080/question', request)\n    //server reponse handling: \n    .then(response => {\n        console.log(\"Server with something back...\")\n        console.log(request)\n        alert(\"We have managed to recieved a quesiton from you, please hang tight and we will get back to you with an answer\")\n    })\n\n    .catch(err => {\n        console.log(err);\n        console.log(request);\n    });\n}\n\n\nexport default StudentLandingPage;\n","import React from 'react';\nimport \"./TutorLandingPage.css\"\n// import logo from './img/favicon.ico'\nimport axios from 'axios';\n\nclass TutorLandingPage extends React.Component{\n    //creating a state to store the question data from the BE api\n    state={\n        questions: []\n    }\n    componentDidMount(){\n        //make a api call to the backend for question data\n        axios.get('http://206.189.194.211:8080/getAllQuestions')\n        // axios.get('http://localhost:8080/getAllQuestions')\n        .then(res => {\n            const questions = res.data;\n            this.setState({questions: questions});\n            console.log(questions)\n        })\n    }\n    \n    //Populate data within the table\n    renderTableData(){\n        //render question data retrieved from the API onto the FE\n        const {\n            questions\n        } = this.state;\n        console.log(questions)\n        //condition for rendering: \n        if(questions){\n            return questions.map((question, index) => {\n                const {_id, course, topic, professor, timestamp, description, studentName, status} = question //deconstructing the question object\n                // //setting the rows and column of the question table\n                // const columns = [\n                //     { field: 'id', headerName: 'Question ID', width: 250 },\n                //     { field: 'student', headerName: 'Student', width: 130 },\n                //     { field: 'topic', headerName: 'Topic', width: 130 },\n                //     { field: 'course', headerName: 'Course', width: 130 },\n                //     { field: 'description', headerName: 'Description', width: 320 },\n                //     { field: 'professor', headerName: 'Professor', width: 130 },\n                //     { field: 'timestamp', headerName: 'Date Received', width: 200 },\n                //     { field: 'status', headerName: 'Status', width: 130 },\n                // ]\n\n                // const rows =[\n                //     { id: _id, course: course, topic: topic, professor: professor, timestamp: timestamp, description: description, student: studentName, status: status},\n                //     { id: _id, course: course, topic: topic, professor: professor, timestamp: timestamp, description: description, student: studentName, status: status},\n\n                // ]                \n                return(\n                    <tr key={_id} onClick={() => fetchTableData(question)}>\n                        <td>{_id}</td>\n                        <td>{studentName}</td>\n                        <td>{topic}</td>\n                        <td>{course}</td>\n                        <td>{description}</td>\n                        <td>{professor}</td>\n                        <td>{timestamp}</td>\n                        <td>{status}</td>\n                    </tr>\n                    // <div style={{ height: 800, width: '100%'}}>\n                    //     <DataGrid rows={rows} columns={columns} />\n                    // </div>\n                )\n            })\n        }\n        \n    }\n\n    render(){\n        const {\n            questions\n        } = this.state;\n        // //function to iterate through the list of question objects and populate them onto the table \n        // const getQuetsionObjects = questions => {\n        //     return(\n        //         <TutorQuestionTableView {...questions} />\n        //     )\n        // }\n\n        //if the question object exist: \n        if(questions){\n        return(\n            <div>\n                \n                <table id='questions'>\n                    <tbody>\n                        <th>ID</th>\n                        <th>Student</th>\n                        <th>Topic</th>\n                        <th>Course</th>\n                        <th>Description</th>\n                        <th>Professor</th>\n                        <th>Date Sent</th>\n                        <th>Status: </th>\n\n                        {/* <tr>{this.renderTableHeader()}</tr> */}\n                        {this.renderTableData()}\n                    </tbody>\n                </table>\n                {/* { questions.map(question => <li>{question.topic}</li>)}\n                {this.renderTableData()} */}\n            </div>\n        )\n        }\n        else{\n            return(\n                <div>\n\n                </div>\n            )\n        }\n    }\n}\n\n//Function fetch data from the table in the table.\nfunction fetchTableData(data){\n    console.log(data);\n    //storing the table row data from the click into the localstorage. \n    //STUDENT INFORMATION\n    localStorage.setItem('topic', data.topic);\n    localStorage.setItem('description', data.description);\n    localStorage.setItem('studentName', data.studentName);\n    localStorage.setItem('professor', data.professor);\n    localStorage.setItem('courseName', data.course);\n    localStorage.setItem('timeStamp', data.timestamp);\n    localStorage.setItem('status', data.status);\n    localStorage.setItem('questionID', data._id);\n    localStorage.setItem('student_ID', data.student_ID);\n    window.location = \"/AnswerPage\"\n\n}\n\n\n\n\n\nexport default TutorLandingPage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardActions from '@material-ui/core/CardActions';\n// import Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\n// import FavoriteIcon from '@material-ui/icons/Favorite';\n// import ShareIcon from '@material-ui/icons/Share';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function RecipeReviewCard(props) {\n  const classes = useStyles();\n//   const [expanded, setExpanded] = React.useState(false);\n\n//   const handleExpandClick = () => {\n//     setExpanded(!expanded);\n//   };\n\n//getting replies information from the props\nconst { tutorName, studentName, answer, timestamp } = props\nif(tutorName){\n    return (\n        <Card className={classes.root}>\n          <CardHeader \n            avatar={\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                T\n              </Avatar>\n            }\n            title={tutorName}\n            subheader={timestamp}\n          />\n    \n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {answer}\n            </Typography>\n          </CardContent>\n        </Card>\n      );\n}\n\nelse if(studentName){\n    return (\n        <Card className={classes.root}>\n          <CardHeader \n            avatar={\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                S\n              </Avatar>\n            }\n            title={studentName}\n            subheader={timestamp}\n          />\n    \n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {answer}\n            </Typography>\n          </CardContent>\n        </Card>\n      );\n}\nelse{\n    return(\n        <div>\n\n        </div>\n    )\n}\n}\n","import React from 'react';\nimport Axios from 'axios';\nimport './AnswerThreadView.css'\nimport { Grid } from \"@material-ui/core\";\nimport CommentCardView from \"./ReplySessionCardView\";\nimport tempPic_01 from \"./img/placeHolderPic.png\";\n\n\n//inline styling for the place holders: \nvar placeHolder_style_01 = {\n    paddingLeft: \"29%\"\n    \n}\n\nvar textStyle_01 = {\n    fontSize: 20,\n    color: \"#4a54f1\",\n    textAlign: \"center\",\n\n}\n//getting the question id \nconst question_id = localStorage.getItem(\"questionID\");\nconsole.log(question_id);\nclass AnswerThreadView extends React.Component{\n    //state to store the answer object from the BE api, \n    //we will take the questions_ID and use it as a parameters to take find all related\n    //object to this question\n    state={\n        answers: []\n    }\n\n    componentDidMount(){\n        //make an API call to the BE to request answer object\n        Axios.get(`http://206.189.194.211:8080/getThisAnswer/${question_id}`)\n        // Axios.get(`http://localhost:8080/getThisAnswer/${question_id}`)\n        .then(res => {\n            const answers = res.data;\n            this.setState({answers: answers});\n            console.log(answers)\n        })\n    }\n    render(){\n        //getting answer object data\n        const {\n            answers\n        } = this.state;\n        //iterate through the list of answer objects coming back and ppopulate them onto the card views\n        const getAnswerObject = answer => {\n            return(\n                <Grid >\n                    <CommentCardView {...answer} />\n                </Grid>\n            )\n        }\n        //conditional rendering: \n        if(answers){\n            return(\n                <Grid style={{paddingLeft: \"150px\", paddingRight: \"40px\", paddingTop: \"10px\", paddingBottom: \"20px\"}}>\n                    {answers.map(answer => getAnswerObject(answer))}\n\n                </Grid>\n            )\n\n\n        }\n\n        return(\n        <div>\n            <img src={tempPic_01} style={placeHolder_style_01} />\n            <h1 style={textStyle_01}>Looks empty, the student needs your help!</h1>\n        </div>\n        )\n    }\n}\n\n\nexport default AnswerThreadView;","//React component that stores the tutor accout processing for users\nimport React from 'react';\nimport Axios from 'axios';\nconst topic = localStorage.getItem(\"topic\");\nconst description = localStorage.getItem(\"description\");\nconst studentName = localStorage.getItem(\"studentName\");\nconst professor = localStorage.getItem(\"professor\");\nconst course = localStorage.getItem(\"courseName\");\nconst timeStamp = localStorage.getItem('timeStamp');\nconst status = localStorage.getItem('status');\nconst questionID = localStorage.getItem('questionID');\nconst studentID = localStorage.getItem('student_ID');\n// console.log(studentID);\n//TUTOR INFORMATION:\nconst tutorName = localStorage.getItem('tutor_name');\nconst tutor_id = localStorage.getItem('tutor_id');\nclass TutorReplyBoxView extends React.Component{\n    render(){\n        return(\n            <div className=\"answer-question\">\n                <form onSubmit={(e) => sendAnswer(e)}>\n                    <div className=\"answer-box\">\n                        <textarea className=\"answerBox\" id=\"explanation\" placeholder=\"Enter your resolution of the issue...\" style={{marginLeft: \"20px\", height: \"70px\", width: \"97%\", position: \"relative\"}}></textarea>\n                    </div>\n                    <div className=\"sendAns\" style={{paddingLeft: \"90%\", position:\"relative\"}}>\n                            <button type=\"submit\" className=\"btn\">Submit</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n//Function to send the answer to the user \nfunction sendAnswer(e){\n    e.preventDefault();\n    const reply_TIME = new Date();\n    const reply_TIME_FORMATTED = new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(reply_TIME);\n    const answer = document.getElementById('explanation').value\n    const status = \"pending\"\n    console.log(answer);\n\n    //Setting up a request: \n    let request = {\n        tutorID: tutor_id,\n        tutorName: tutorName,\n        questionID: questionID,\n        answer: answer,\n        timestamp: reply_TIME_FORMATTED,\n        studentID: studentID,\n        status: status\n    }\n\n    //Axio command to connect to the back end via the api url:\n    Axios.post('http://206.189.194.211:8080/answer', request)\n    // Axios.post('http://localhost:8080/answer', request)\n    //server response handling: \n    .then(response => {\n        console.log(\"Server response...\");\n        alert(\"Replies sent to user...\")\n    })\n\n    .catch(err => {\n        console.log(err);\n        console.log(request);\n    });\n\n    window.location.reload(false);\n}\n\n\nexport default TutorReplyBoxView;\n","import React from 'react';\nimport \"./DisplayOriginalQuestionPost.css\";\n//getting the question information from the table that was stored in the localstorage\n//STUDENT - QUESTION INFORMATION\nconst topic = localStorage.getItem(\"topic\");\nconst description = localStorage.getItem(\"description\");\nconst studentName = localStorage.getItem(\"studentName\");\nconst professor = localStorage.getItem(\"professor\");\nconst course = localStorage.getItem(\"courseName\");\nconst timeStamp = localStorage.getItem('timeStamp');\n// const status = localStorage.getItem('status');\nconst questionID = localStorage.getItem('questionID');\nconst studentID = localStorage.getItem('student_ID');\n// console.log(studentID);\n//TUTOR INFORMATION:\n// const tutorName = localStorage.getItem('tutor_name');\n// const tutor_id = localStorage.getItem('tutor_id');\n// console.log(tutorName)\n// console.log(tutor_id)\n\n//main class to display the original quesiton post\nclass DisplayOriginalQuestionPost extends React.Component{\n    render(){\n        return(\n            <div className=\"show-post\">\n                <div className=\"show-post-header\">\n                    <h2>{studentName}</h2>\n                    <span>{studentID}</span>\n                    <div className=\"id-time-span\">\n                        \n                        <span>{timeStamp}</span>\n                    </div>\n                </div>\n                <div className=\"show-post-description\">\n                    <span>{description}</span>\n                </div>\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default DisplayOriginalQuestionPost;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AnswerThreadView from \"./AnswerThreadView\";\nimport TutorReplyBoxView from \"./TutorReplyBoxView\";\nimport DisplayOriginalQuestionPost from './DisplayOriginalQuestionPost';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function PermanentDrawerLeft() {\n  const classes = useStyles();\n    //STUDENT - QUESTION INFORMATION\n  // const topic = localStorage.getItem(\"topic\");\n  // const description = localStorage.getItem(\"description\");\n  // const studentName = localStorage.getItem(\"studentName\");\n  const professor = localStorage.getItem(\"professor\");\n  const course = localStorage.getItem(\"courseName\");\n  // const timeStamp = localStorage.getItem('timeStamp');\n  const status = localStorage.getItem('status');\n  const questionID = localStorage.getItem('questionID');\n  // const studentID = localStorage.getItem('student_ID');\n  // console.log(studentID);\n  // //TUTOR INFORMATION:\n  // const tutorName = localStorage.getItem('tutor_name');\n  // const tutor_id = localStorage.getItem('tutor_id');\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            Toodler In Action\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {[questionID, course, status, professor].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        {/* <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List> */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n            <DisplayOriginalQuestionPost />\n            <AnswerThreadView />\n            <TutorReplyBoxView />\n      </main>\n    </div>\n  );\n}","//React component that stores the tutor accout processing for users\nimport React from 'react';\n// import \"./AnswerPage.css\";\n\n\n// import PermanentDrawerLeft from \"./TutorAnsweringView\";\n// import AnswerThreadView from \"./AnswerThreadView\";\nimport PermanentDrawerLeft from \"./TutorAnsweringView\";\n// import TutorReplyBoxView from \"./TutorReplyBoxView\";\n// console.log(questionInfo);\nclass AnswerPage extends React.Component{\n    render(){\n        return(\n            <div className=\"show-data-tutor\">\n                <PermanentDrawerLeft />\n                \n            </div>\n        )\n    }\n}\n\nexport default AnswerPage;\n","//This component will render out the input box for the student to send their replies to the tutor\nimport React from 'react';\nimport axios from 'axios';\n\nconst topic = localStorage.getItem(\"topic\");\nconst description = localStorage.getItem(\"description\");\nconst professor = localStorage.getItem(\"professor\");\nconst student_name = localStorage.getItem(\"student_name\");\nconst status = localStorage.getItem(\"status\");\nconst timeStamp = localStorage.getItem(\"timestamp\");\nconst studentID= localStorage.getItem(\"id\")\nconst questionID = localStorage.getItem(\"questionID\");\n\n\nclass StudentReplyBox extends React.Component{\n    render(){\n        return(\n            <div className=\"student-text-box\" >\n                <form onSubmit={(e) => sendFollowUp(e)}>\n                    <div className=\"answer-box\">\n                        <textarea className=\"answerBox\" id=\"followUp\" placeholder=\"Still have question? Let us know!\"></textarea>\n                    </div>\n                    <div className=\"sendAns\">\n                        <button type=\"submit\" className=\"btn\">Submit Response</button>\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}\n\n//Function to send the follow up from the student into the back end\nfunction sendFollowUp(e){\n    e.preventDefault();\n    //getting the time stamp: \n    const timestamp = new Date()\n    const timestamp_Formated= new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(timestamp);\n    const answer = document.getElementById('followUp').value\n    //creating a request object to send out\n    let request = {\n        studentName: student_name,\n        studentID: studentID,\n        questionID: questionID,\n        answer: answer, \n        timestamp: timestamp_Formated,\n        status: \"open\"\n    }\n    //Making a connection to the back end:\n    axios.post('http://206.189.194.211:8080/answer', request)\n    // axios.post('http://localhost:8080/answer', request)\n    //server reponse hanlding: \n    .then(response => {\n        console.log(response)\n        alert(\"Follow up sent!\")\n    })\n    //error handling: \n    .catch(err => {\n        alert(err)\n    })\n}\n\nexport default StudentReplyBox;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n//getting question information from the\nconst topic = localStorage.getItem(\"topic\");\nconst description = localStorage.getItem(\"description\");\nconst professor = localStorage.getItem(\"professor\");\nconst student_name = localStorage.getItem(\"student_name\");\nconst status = localStorage.getItem(\"status\");\nconst timeStamp = localStorage.getItem(\"timestamp\");\nconst studentID= localStorage.getItem(\"id\")\nconst questionID = localStorage.getItem(\"questionID\")\n\nexport default function SingleQuestionCardView() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {student_name}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {topic}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {status}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {description}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          {timeStamp}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport \"./QuestionThreadView.css\";\nimport AnswerThreadView from \"./AnswerThreadView\";\nimport StudentReplyBox from \"./StudentReplyBox\";\nimport SingleQuestionCardView from \"./QuestionThreadViewSingleCard\"\n//Getting the information about the question that needs to be created\n// const questionObject = localStorage.getItem(\"question_object\");\n\n\nclass QuestionThreadsView extends React.Component{\n    //function to render out components\n    render(){\n        return(\n            <div className=\"showInfo\">\n                <SingleQuestionCardView />\n                <AnswerThreadView />\n                <StudentReplyBox />\n\n                \n            </div>\n        )\n    }\n}\n\n\n\n//export the function\nexport default QuestionThreadsView;","import React from 'react';\nimport \"./registrationLogin.css\"\nimport axios from 'axios';\n // @ts-ignore  \n import jwt_decode from \"jwt-decode\";\n// import StudentLandingPage from \"./studentLandingPage\"\n\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n\n    }\n\n    render(){\n        return(\n            \n            <div className=\"base-container\" ref={this.props.containerRef}>\n                <form onSubmit={(e) => login(e)}>\n                    <div className=\"header\">Login</div>\n                    <div className=\"content\">\n                        {/* <div className=\"image\">\n                            <p>image goes here!</p>\n                        </div> */}\n\n                        <div className=\"form\">\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username: </label>\n                                <input type=\"text\" id=\"username\" placeholder=\"username\" onChange={this.handleChange}/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password: </label>\n                                <input type=\"password\" id=\"password\" placeholder=\"password\" />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"footer\">\n                        <button type=\"submit\" className=\"btn\">Login</button>\n                    </div>                            \n                </form>\n            </div>\n\n        )\n    }\n}\n\n//function to group the data and send them out via Json.\nfunction login(e){\n    e.preventDefault();\n    let request = {\n        username: document.getElementById('username').value,\n        password: document.getElementById('password').value\n    }\n    axios.post('http://206.189.194.211:8000/login', request)\n    // axios.post('http://localhost:8000/login', request)\n    .then(response => {\n        // alert(response.data.message);\n        console.log(request);\n        console.log(response.data.result) //response back from server\n        console.log(response.data.error)  // two type: invalid password or username\n        // //Variable to store the reponse from the server\n        var goodRes = response.data.result\n        var errorMessage = response.data.error\n\n        // //alert the error to the user\n        if(errorMessage === \"Invalid password\" || errorMessage === \"Invalid Username\"){\n            alert(errorMessage)\n        }\n        \n        else{\n            // alert(goodRes)\n            //decode the jwt sent in from the server. \n            var decode = jwt_decode(goodRes);\n            console.log(decode)\n            //If the user type is a tutor direct them to a tutor page\n            if (decode.student == true){\n                //Creating a cookie with the username \n                localStorage.setItem('username', decode.username)\n                localStorage.setItem('id', decode.id)\n\n                window.location = \"/studentLandingPage\";\n            }\n\n            if (decode.tutor == true){\n                localStorage.setItem('tutor_name', decode.username)\n                localStorage.setItem('tutor_id', decode.id)\n                window.location = \"/TutorLandingPage\";\n\n            }\n\n        }\n        \n    })\n    .catch(err => {\n        console.log(err);\n        console.log(request);\n    })\n}\n\nexport default Login;","import React from 'react';\nimport \"./registrationLogin.css\"\nimport axios from 'axios';\n// import {Link} from \"react-router-dom\";\n// import RegConfirmation from './registrationConfirmation';\nclass Register extends React.Component{\n    constructor(prop){\n        super(prop);\n    }\n\n    render(){\n        return(\n            <div className=\"base-container\" ref={this.props.containerRef}>\n                <form onSubmit={(e) => registrattion(e)}>\n                <div className=\"header\">Register</div>\n                <div className=\"content\">\n                    {/* <div className=\"image\">\n                        <p>image goes here!</p>\n                    </div> */}\n                    <div className=\"form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username: </label>\n                            <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"username\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Email: </label>\n                            <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"email\" />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password: </label>\n                            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"footer\">\n                    <button type=\"submit\" className=\"btn\">Register</button>\n                </div>\n                </form>\n            </div>\n\n        )\n    }\n}\n\n//function to group the data and send them out via Json.\nfunction registrattion(e){\n    e.preventDefault();\n    //setting header for the request\n    // let config = {\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       \"Access-Control-Allow-Methods\": 'OPTIONS,POST,GET, DELETE',\n    //       'Access-Control-Allow-Headers': '*',\n    //       'Access-Control-Allow-Origin': '*'\n          \n    //       }\n    //     }\n        \n    let request = {\n        username: document.getElementById('username').value,\n        email: document.getElementById('email').value,\n        password: document.getElementById('password').value\n    }\n\n    axios.post('http://206.189.194.211:8000/register', request)\n    // axios.post('http://localhost:8000/register', request)\n    .then(response => {\n        // alert(response.data.message);\n        console.log(request);   //Data object being sent out\n        //object received \n        // console.log(response.data.result)\n        // console.log(response.data.error)\n        var server_response = response.data.result\n        // var error = response.data.error\n        // console.log(goodRes)\n    \n        //if the username is already in the database: then let the user know and dont redirect to confirmation page\n        if (server_response == \"Username Already Exists!\"){\n            alert(server_response)\n        }\n        //redirect to a page confirmation page if no error is sent back from the server\n        else{\n            window.location = \"/registrationConfirmation\";\n        }\n        \n    })\n\n    //Error handling: \n    .catch(err => {\n        console.log(err);\n        console.log(request);\n    })\n}\n\n\nexport default Register;","//main page to handle user login and registration forms:\nimport React from \"react\";\nimport Login from \"./Login\";\nimport Register from \"./Registraion\";\nimport \"./userPage.css\";\n\n\nclass UserFields extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoginActive: true,\n\n        };\n    }\n\n    // componentDidMount() {\n    //     //Add .right by default\n    //     this.rightSide.classList.add(\"right\");\n    //   }\n    \n\n    changeState(){\n        const { isLoginActive } = this.state;\n        //if the login page is active, so the login button on the right side\n        if(isLoginActive) {\n            this.RightSide.classList.remove(\"right\");\n            this.RightSide.classList.add(\"left\");\n\n        } else {\n            this.RightSide.classList.remove(\"left\");\n            this.RightSide.classList.add(\"right\");\n        }\n\n        this.setState((prevState) => ({ isLoginActive: !prevState.isLoginActive }));\n    }\n\n    render(){\n        const {isLoginActive } = this.state;\n        //this variable to check whether we are looking at the register forms or login forms\n        const current = isLoginActive ? \"New user? Create an account\" : \" Already have an account? Sign in\";\n        const currentActive = isLoginActive ? \"Login\" : \"Register\";\n        return(\n        <div className=\"wrapper\">\n            <div className=\"mainContainer\">\n                <div className=\"Login\">\n                    <div className=\"containerN\">\n                        {isLoginActive && <Login containerRef={(ref) => this.current = ref}/> }\n                        {!isLoginActive && <Register containerRef={(ref) => this.current = ref}/>}\n                    </div>\n                    <RightSide current={current} currentActive={currentActive} containerRef={ref => this.RightSide = ref} onClick={this.changeState.bind(this)}/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\n\nconst RightSide = props => {\n    return (<div className=\"right-side\" ref={props.containerRef} onClick={props.onClick}>\n    <div className=\"inner-container\">\n        <div className=\"text\" style={{color: \"white\"}}>{props.current}</div>\n    </div>\n</div>);\n};\n\nexport default UserFields;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Welcome from './Welcome';\nimport Footer from './footer';\nimport Promotion from './Promotion';\nimport Faq from './Faq';\nimport Disclaimer from './Disclaimer';\nimport Navigation from './Navigation';\nimport RegConfirmation from './registrationConfirmation';\nimport StudentLandingPage from './studentLandingPage';\nimport TutorLandingPage from './TutorLandingPage';\nimport AnswerPage from './AnswerPage';\nimport SideMenuStudent from './SideMenuStudent';\nimport StudentCardView from './StudentCardView';\nimport QuestionThreadsView from './QuestionThreadsView';\n// import Registration from './Registraion';\n// import Login from './Login';\nimport UserFields from './userPage';\nclass App extends Component{\n  render(){\n    return(\n      <div>\n        <Router>\n          <div className=\"Router-test\">\n            <Switch>\n              <Route path=\"/\" exact component={Main} />\n              <Route path=\"/userPage\" component={UserFields}/>\n              <Route path=\"/registrationConfirmation\" component={RegConfirmation}/>\n              <Route path=\"/studentLandingPage\" component={StudentLandingPage} />\n              <Route path=\"/TutorLandingPage\" component={TutorLandingPage} />\n              <Route path=\"/AnswerPage\" component={AnswerPage} />\n              <Route path=\"/SideMenuStudent\" component={SideMenuStudent} />\n              <Route path=\"/StudentCardView\" component={StudentCardView} />\n              <Route path=\"/QuestionThreadsView\" component={QuestionThreadsView} />\n\n            </Switch>\n\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\n\nclass Main extends Component{\n  render(){\n    return(\n      <div>\n        <Navigation/>\n        <Welcome />\n        <Promotion />\n        <Disclaimer />\n        <div className=\"faq-header\">\n          <h1>FAQs</h1>\n        </div>\n        <Faq title=\"What is Toodle?\" content=\"Toodle is an online tutoring that allows student to ask a tutor any question\"/>\n        <Faq title=\"Why use Toodle?\" content=\"Toodle is an online tutoring that allows student to ask a tutor any question\"/>\n        <Faq title=\"How does Toodle work?\" content=\"Toodle is an online tutoring that allows student to ask a tutor any question\"/>\n        <Faq title=\"How long can I get a tutor response?\" content=\"Toodle is an online tutoring that allows student to ask a tutor any question\"/>\n        <Faq title=\"How do I start asking question on Toodle?\" content=\"Toodle is an online tutoring that allows student to ask a tutor any question\"/>\n\n        <Footer />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/favicon.9c77ce03.ico\";","module.exports = __webpack_public_path__ + \"static/media/placeHolderPic.4323c7f5.png\";","module.exports = __webpack_public_path__ + \"static/media/Best-Programming-Languages-to-Start-Learning-Today.7b8d9a65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Competitive-Programming-1.096339a2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/download.49b36068.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/placeholder.76b2bfd3.png\";"],"sourceRoot":""}